name: Deploy to ECR

on: 
  push:
    branches: [ master ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: us-east-1

    - name: Build, test, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: assignment2ecr
        IMAGE_TAG: v0.1nodeapp
        IMAGE_TAG1: v1.1mysql
        
      run: |
        #cd nikhilbanga7/clo835_fall2022_assignment1
        #ls -ltra

        # Docker build
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --file Dockerfile .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG1 --file Dockerfile_mysql .
        # Unit test
        docker run -d -p 80:8080 --name nodeapp $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker run -d -p 81:8080 --name mydb $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG1
        docker ps
        echo "Pause for 10 seconds to let container start"
        sleep 10
        
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG1
        
        #good to 
